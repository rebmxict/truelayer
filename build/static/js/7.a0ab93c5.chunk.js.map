{"version":3,"sources":["components/dashboard/View.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","View","className","classes","id","useParams","accessToken","useSelector","state","resource","useState","data","setData","loading","setLoading","useEffect","accountId","config","method","url","server_url","headers","axios","then","response","results","catch","error","console","log","emptyValue","style","color","columns","title","field","type","clsx","variant","length","isLoading","options","pageSize","pageSizeOptions","actionsCellStyle","transform","headerStyle","backgroundColor","borderTop","paddingTop","paddingBottom","exportButton","exportAllData","exportFileName","localization","header","actions"],"mappings":"kNAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,QA8GZC,UA1Gf,YAA8B,IAAdC,EAAa,EAAbA,UACRC,EAAUR,IAETS,EAAOC,cAAPD,GAEFE,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,eAE1D,EAAwBI,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACT,GAAIT,GAAeF,EAAI,CACtBU,GAAW,GACR,IAAMH,EAAO,CAAEL,cAAaU,UAAWZ,GAEjCa,EAAS,CACbC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,iBACHT,OACAU,QAAS,CACP,eAAgB,qBAIpBC,IAAML,GACLM,MAAK,SAAUC,GAClBZ,EAAQY,EAASb,KAAKc,SACtBX,GAAW,MAERY,OAAM,SAAUC,GACfC,QAAQC,IAAIF,SAGhB,CAACrB,EAAaF,IAEhB,IAAM0B,EAAa,WAAQ,OAAO,uBAAGC,MAAO,CAACC,MAAO,cAAlB,gBAC5BC,EAAU,CACd,CACEC,MAAO,iBACPC,MAAO,iBACPL,cAEF,CACEI,MAAO,SACPC,MAAO,SACPL,cAEF,CACEI,MAAO,WACPC,MAAO,WACPL,cAEF,CACEI,MAAO,mBACPC,MAAO,mBACPL,cAEF,CACEI,MAAO,cACPC,MAAO,cACPL,cAEF,CACEI,MAAO,YACPC,MAAO,YACPC,KAAM,OACNN,eAIJ,OACE,yBACE5B,UAAWmC,YAAKlC,EAAQL,KAAMI,IAE9B,kBAAC,IAAD,CACEgC,MAAO,kBAAC,IAAD,CAAYI,QAAQ,MAAM3B,EAAK4B,OAA/B,kBACPN,QAASA,EACTtB,KAAMA,EACN6B,UAAW3B,EACX4B,QAAS,CACPC,SAAU,GACVC,gBAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,KACjCC,iBAAkB,CAChBC,UAAW,cAEbC,YAAa,CACXC,gBAAiB,UACjBC,UAAW,oBACXC,WAAY,MACZC,cAAe,OAEjBnD,QAAS,QACToD,cAAc,EACdC,eAAe,EACfC,eAAgB,YAElBC,aAAc,CACZC,OAAQ,CACNC,QAAS","file":"static/js/7.a0ab93c5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport MaterialTable from 'material-table';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { server_url } from 'src/current-env';\nimport { useParams } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction View({ className }) {\n  const classes = useStyles();\n  \n\tconst { id } = useParams();\n\n\tconst accessToken = useSelector((state) => state.resource.accessToken);\n\n\tconst [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (accessToken && id) {\n\t\t\tsetLoading(true);\n      const data = { accessToken, accountId: id };\n\n      const config = {\n        method: 'post',\n        url: `${server_url}/transactions`,\n        data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      \n      axios(config)\n      .then(function (response) {\n\t\t\t\tsetData(response.data.results);\n\t\t\t\tsetLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\t\t}\n\t}, [accessToken, id]);\n\n  const emptyValue = () => { return <i style={{color: 'lightgrey'}}>Unavailable</i>; }\n  const columns = [\n    {\n      title: 'Transaction Id',\n      field: 'transaction_id',\n      emptyValue,\n    },\n    {\n      title: 'Amount',\n      field: 'amount',\n      emptyValue,\n    },\n    {\n      title: 'Currency',\n      field: 'currency',\n      emptyValue,\n    },\n    {\n      title: 'Transaction Type',\n      field: 'transaction_type',\n      emptyValue,\n    },\n    {\n      title: 'Description',\n      field: 'description',\n      emptyValue,\n    },\n    {\n      title: 'Timestamp',\n      field: 'timestamp',\n      type: 'date',\n      emptyValue,\n    },\n  ];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n    >\n      <MaterialTable\n        title={<Typography variant=\"h5\">{data.length} Records Found</Typography>}\n        columns={columns}\n        data={data}\n        isLoading={loading}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [5, 10, 20, 50, 100],\n          actionsCellStyle: {\n            transform: 'scale(0.8)'\n          },\n          headerStyle: {\n            backgroundColor: '#FAFAFA',\n            borderTop: '1px solid #EEEEEE',\n            paddingTop: '8px',\n            paddingBottom: '8px',\n          },\n          padding: \"dense\",\n          exportButton: true,\n          exportAllData: true,\n          exportFileName: 'Payments'\n        }}\n        localization={{\n          header: {\n            actions: ''\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default View;\n"],"sourceRoot":""}